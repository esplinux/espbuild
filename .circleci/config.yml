version: 2.1

executors:
  alpine:
    docker:
      - image: alpine:3.9
    working_directory: ~/
    environment:
      VERSION: 0.01

jobs:
  prepare:
    executor: alpine
    steps:
      - run: apk add ca-certificates go git build-base
      - run: go mod init .
      - run: go get github.com/tcnksm/ghr@v0.12.1
      - run: ~/go/bin/ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ~/workspace/versions.txt

  espbuild-static:
    executor: alpine
    steps:
      - run: apk add ca-certificates bsdtar go git build-base
      - checkout
      - run: go get go.starlark.net/starlark
      - run: CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-extldflags "-static"' espbuild.go
      - run: mkdir -p ~/build/bin
      - run: cp ~/espbuild ~/build/bin
      - run: bsdtar cvfz ~/espbuild-static.tar.gz -C ~/build .
      - run: go mod init .
      - run: go get github.com/tcnksm/ghr@v0.12.1
      - run: ~/go/bin/ghr -prerelease -replace -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${VERSION} ~/espbuild-static.tar.gz

  espbuild:
    executor: alpine
    steps:
      - run: apk add ca-certificates bsdtar go git build-base
      - checkout
      - run: go get go.starlark.net/starlark
      - run: go build espbuild.go
      - run: mkdir -p ~/build/bin
      - run: cp ~/espbuild ~/build/bin
      - run: bsdtar cvfz ~/espbuild.tar.gz -C ~/build .
      - run: go mod init .
      - run: go get github.com/tcnksm/ghr@v0.12.1
      - run: ~/go/bin/ghr -prerelease -replace -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${VERSION} ~/espbuild.tar.gz

workflows:
  build:
    jobs:
      - prepare
      - espbuild-static:
          requires:
            - prepare
      - espbuild:
          requires:
            - prepare
